<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.lexian.manager.order.dao.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.chinasofti.lexian.manager.order.vo.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="store_no" property="storeNo" jdbcType="VARCHAR" />
		<result column="totalamount" property="totalamount" jdbcType="DOUBLE" />
		<result column="paymenttype" property="paymenttype" jdbcType="VARCHAR" />
		<result column="paymentsubtype" property="paymentsubtype"
			jdbcType="VARCHAR" />
		<result column="deliverytype" property="deliverytype" jdbcType="VARCHAR" />
		<result column="states" property="states" jdbcType="INTEGER" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, order_no, user_id, store_no, totalamount, paymenttype,
		paymentsubtype, deliverytype,
		states, createtime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from orders
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		insert into orders (id, order_no, user_id,
		store_no, totalamount, paymenttype,
		paymentsubtype, deliverytype, states,
		createtime)
		values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{storeNo,jdbcType=VARCHAR}, #{totalamount,jdbcType=DOUBLE}, #{paymenttype,jdbcType=VARCHAR},
		#{paymentsubtype,jdbcType=VARCHAR}, #{deliverytype,jdbcType=VARCHAR},
		#{states,jdbcType=INTEGER},
		#{createtime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="storeNo != null">
				store_no,
			</if>
			<if test="totalamount != null">
				totalamount,
			</if>
			<if test="paymenttype != null">
				paymenttype,
			</if>
			<if test="paymentsubtype != null">
				paymentsubtype,
			</if>
			<if test="deliverytype != null">
				deliverytype,
			</if>
			<if test="states != null">
				states,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeNo != null">
				#{storeNo,jdbcType=VARCHAR},
			</if>
			<if test="totalamount != null">
				#{totalamount,jdbcType=DOUBLE},
			</if>
			<if test="paymenttype != null">
				#{paymenttype,jdbcType=VARCHAR},
			</if>
			<if test="paymentsubtype != null">
				#{paymentsubtype,jdbcType=VARCHAR},
			</if>
			<if test="deliverytype != null">
				#{deliverytype,jdbcType=VARCHAR},
			</if>
			<if test="states != null">
				#{states,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		update orders
		<set>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="storeNo != null">
				store_no = #{storeNo,jdbcType=VARCHAR},
			</if>
			<if test="totalamount != null">
				totalamount = #{totalamount,jdbcType=DOUBLE},
			</if>
			<if test="paymenttype != null">
				paymenttype = #{paymenttype,jdbcType=VARCHAR},
			</if>
			<if test="paymentsubtype != null">
				paymentsubtype = #{paymentsubtype,jdbcType=VARCHAR},
			</if>
			<if test="deliverytype != null">
				deliverytype = #{deliverytype,jdbcType=VARCHAR},
			</if>
			<if test="states != null">
				states = #{states,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		update orders
		set order_no = #{orderNo,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=VARCHAR},
		store_no = #{storeNo,jdbcType=VARCHAR},
		totalamount = #{totalamount,jdbcType=DOUBLE},
		paymenttype = #{paymenttype,jdbcType=VARCHAR},
		paymentsubtype = #{paymentsubtype,jdbcType=VARCHAR},
		deliverytype = #{deliverytype,jdbcType=VARCHAR},
		states = #{states,jdbcType=INTEGER},
		createtime = #{createtime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<resultMap id="BaseResultMapWithStore" type="com.chinasofti.lexian.manager.order.vo.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="store_no" property="storeNo" jdbcType="VARCHAR" />
		<result column="totalamount" property="totalamount" jdbcType="DOUBLE" />
		<result column="states" property="states" jdbcType="INTEGER" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<association property="store"
			javaType="com.chinasofti.lexian.manager.order.vo.Store">
			<id column="store_no" property="storeNo" />
			<result column="storename" property="storename" />
		</association>
	</resultMap>
	
	<!-- resultMap="BaseResultMapWithStore" parameterType="com.chinasofti.lexian.manager.order.vo.Orders"-->
	<select id="selectPageOrders" resultMap="BaseResultMapWithStore"  parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		select
		o.id as id,
		o.order_no as order_no,
		o.store_no as store_no,
		o.createtime as createtime,
		o.states as states,
		o.totalamount as totalamount,
		s.storename as storename
		from orders o,store s
		where o.store_no = s.store_no
		<if test="states != 0 and states != '' and states != null">
			and o.states = #{states}
		</if>
	</select>

	<select id="selectPageOrdersByStates" resultMap="BaseResultMapWithStore" parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		select
		o.id as id,
		o.order_no as order_no,
		o.store_no as store_no,
		o.createtime as createtime,
		o.states as states,
		o.totalamount as totalamount,
		s.storename as storename
		from orders o,store s
		where o.store_no = s.store_no
		and o.states = #{states}
	</select>

	<resultMap id="BaseResultMap_OrderParticulars" type="com.chinasofti.lexian.manager.order.vo.Orders">
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<association property="store"
			javaType="com.chinasofti.lexian.manager.order.vo.Store">
			<result column="storename" property="storename" />
		</association>
		<association property="user"
			javaType="com.chinasofti.lexian.manager.user.vo.User">
			<id column="phone" property="phone" />
			<result column="username" property="username" />
		</association>
		<collection property="commodity" resultMap="commodity"></collection>
	</resultMap>
	
	<resultMap id="commodity" type="CommodityInfo">
		<id column="commodity_no" property="commodityNo" />
		<result column="name" property="name" />
		<result column="pictureurl" property="pictureurl" />
		<association property="orderitem"
			javaType="com.chinasofti.lexian.manager.order.vo.Orderitem">
			<result column="amount" property="amount" />
			<result column="listprice" property="listprice" />
			<result column="totalprice" property="totalprice" />
		</association>
	</resultMap>

	<select id="selectOrderParticulars" resultMap="BaseResultMap_OrderParticulars"
		parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		select
			o.order_no as order_no,
			o.createtime as createtime,
			s.storename as storename,
			c.commodity_no as commodity_no,
			c.name as name,
			c.pictureurl as pictureurl,
			u.username as username,
			u.phone as phone,
			oi.amount as amount,
			oi.listprice as listprice,
			oi.totalprice as totalprice
		from 
			orders o, user u, store s, orderitem oi, commodity c
		where 
			o.id = #{id,jdbcType=INTEGER}
			and o.id = oi.order_id
			and oi.commodity_no = c.commodity_no
			and o.store_no = s.store_no
			and o.user_id = u.id
	</select>
	
	<!-- 发货 -->
	<update id="deliverGoods" parameterType="java.lang.Integer">
		update orders
		set 
			states = 3
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 查询订单		<![CDATA[  ]]>中的所有字符都会被识别，特殊字符也不会报错 -->
	<select id="searchPageOrders" resultMap="BaseResultMapWithStore"
		parameterType="com.chinasofti.lexian.manager.order.vo.Orders">
		select
		o.id as id,
		o.order_no as order_no,
		o.store_no as store_no,
		o.createtime as createtime,
		o.states as states,
		o.totalamount as totalamount,
		s.storename as storename
		from orders o,store s
		where o.store_no = s.store_no
		<if test="states != 0 and states != ''">
			and o.states = #{states}
		</if>
		<choose>
			<when test="starttime != '' and endtime != '' and orderInfo != ''">
				and o.createtime <![CDATA[ >= ]]> #{starttime} and o.createtime <![CDATA[ <= ]]> #{endtime} 
				an ${condition} like "%"#{orderInfo}"%"
			</when>
			<when test="starttime != '' and endtime != '' and orderInfo == ''">
				and o.createtime <![CDATA[ >= ]]> #{starttime} and o.createtime <![CDATA[ <= ]]> #{endtime}
			</when>
			<when test="starttime != '' and endtime == '' and orderInfo != ''">
				and o.createtime <![CDATA[ >= ]]> #{starttime} 
				and ${condition} like "%"#{orderInfo}"%"
			</when>
			<when test="starttime != '' and endtime == '' and orderInfo == ''">
				and o.createtime <![CDATA[ >= ]]> #{starttime}
			</when>
			<when test="starttime == '' and endtime != '' and orderInfo != ''">
				and o.createtime <![CDATA[ <= ]]> #{endtime} 
				and ${condition} like "%"#{orderInfo}"%"
			</when>
			<when test="starttime == '' and endtime != '' and orderInfo == ''">
				and o.createtime <![CDATA[ <= ]]> #{endtime}
			</when>
			<when test="starttime == '' and endtime == '' and orderInfo != ''">
				and ${condition} like "%"#{orderInfo}"%"
			</when>
		</choose>
	</select>
</mapper>