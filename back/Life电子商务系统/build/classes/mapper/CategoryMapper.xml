<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.lexian.manager.category.dao.CategoryMapper" >
  <resultMap id="BaseResultMap" type="Category" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="categoryname" property="categoryname" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, categoryname, type, parentid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  parameterType="Category" >
    insert into category (id, categoryname, type, 
      parentid)
    values (#{id,jdbcType=INTEGER}, #{categoryname,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{parentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Category" >
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="categoryname != null" >
        categoryname,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryname != null" >
        #{categoryname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Category" >
    update category
    <set >
      <if test="categoryname != null" >
        categoryname = #{categoryname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Category" >
    update category
    set categoryname = #{categoryname,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      parentid = #{parentid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectAllCategory" resultType="Category"  >
    select 
    <include refid="Base_Column_List" />
    from category
  </select>
  
   <select id="selectPageCategoryByType1" resultType="Category"   parameterType="Category">
    select 
    <include refid="Base_Column_List" />
    from category
    where type = 1
  </select>
   <select id="selectPageCategoryByType2" resultType="Category"  parameterType="Category" >
   SELECT a.id , a.categoryname as categoryname,b.categoryname as parentname,a.type as type FROM category a,category b 
	WHERE (a.parentid = b.id) AND (a.type=2)
  </select>
   <select id="selectPageCategoryByType3" resultType="Category"   parameterType="Category">
     SELECT a.id ,a.categoryname as categoryname,b.categoryname as parentname,a.type as type FROM category a,category b 
	WHERE (a.parentid = b.id) AND (a.type=3)
  </select>
  
    <update id="updateCategoryNameLike" parameterType="Category" >
    update category
    <set >
      <if test="categoryname != null" >
        categoryname = #{categoryname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where categoryname like concat(concat('%',#{categoryname}),'%')
  </select>
   <select id="selectByType" resultMap="BaseResultMap" parameterType="java.lang.Integer"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where type = #{type,jdbcType=INTEGER}
  </select>
  
   <select id="selectCategoryByType1" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where type=1
  </select>
   <select id="selectPageLikeByName1" resultMap="BaseResultMap" parameterType="Category"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where type=1
  </select>
  <select id="selectPageLikeByName2" resultMap="BaseResultMap" parameterType="Category"  >
     SELECT a.id AS id, a.categoryname AS categoryname,a.parentid AS parentid,b.categoryname AS parentname,a.type AS TYPE FROM category a,category b 
	WHERE (a.parentid = b.id) AND (a.type=2)
  </select>
   <select id="selectPageLikeByName3" resultMap="BaseResultMap" parameterType="Category"  >
    SELECT a.id as id, a.categoryname as categoryname,a.parentid as parentid,b.categoryname as parentname,a.type as type FROM category a,category b 
	WHERE (a.parentid = b.id) and (a.type=3)
  </select>
  
  <select id="selectLikeByName1" resultMap="BaseResultMap" parameterType="Category"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where type=1
  </select>
  <select id="selectCategoryByParenId" resultMap="BaseResultMap" parameterType="Category"  >
    select 
    <include refid="Base_Column_List" />
    from category
    where parentid=#{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectCategoryByType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from category
    where type=#{type,jdbcType=INTEGER}
  </select>
</mapper>